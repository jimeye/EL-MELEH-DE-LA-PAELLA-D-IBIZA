// Script simple pour tester Upstash Redis
// √Ä lancer avec: node utils/test_upstash.js

const { Redis } = require('@upstash/redis');

console.log('üß™ Test rapide Upstash Redis...');

// V√©rification des variables d'environnement
if (!process.env.UPSTASH_REDIS_REST_URL || !process.env.UPSTASH_REDIS_REST_TOKEN) {
  console.error('‚ùå Variables d\'environnement Upstash manquantes');
  console.error('UPSTASH_REDIS_REST_URL:', process.env.UPSTASH_REDIS_REST_URL ? '‚úÖ' : '‚ùå');
  console.error('UPSTASH_REDIS_REST_TOKEN:', process.env.UPSTASH_REDIS_REST_TOKEN ? '‚úÖ' : '‚ùå');
  console.log('\nüí° Pour configurer les variables, cr√©ez un fichier .env.local avec :');
  console.log('UPSTASH_REDIS_REST_URL=votre_url_upstash');
  console.log('UPSTASH_REDIS_REST_TOKEN=votre_token_upstash');
  process.exit(1);
}

// Initialisation Redis
const redis = new Redis({
  url: process.env.UPSTASH_REDIS_REST_URL,
  token: process.env.UPSTASH_REDIS_REST_TOKEN,
});

async function testUpstash() {
  try {
    console.log('üîÑ Test de connexion...');
    
    // Test simple : √©crire et lire une valeur
    const testValue = `test_${Date.now()}`;
    await redis.set('test_key', testValue);
    console.log('‚úÖ √âcriture r√©ussie');
    
    const readValue = await redis.get('test_key');
    console.log('‚úÖ Lecture r√©ussie:', readValue);
    
    // Nettoyer
    await redis.del('test_key');
    console.log('‚úÖ Nettoyage r√©ussi');
    
    console.log('üéâ Test Upstash r√©ussi ! Base de donn√©es active.');
    
  } catch (error) {
    console.error('‚ùå Erreur Upstash:', error.message);
    process.exit(1);
  }
}

testUpstash(); 